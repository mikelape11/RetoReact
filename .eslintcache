[{"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\index.js":"1","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\serviceWorker.js":"2","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\App.js":"3","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\index.js":"4","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Login\\index.js":"5","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\styles.js":"6","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\routes.js":"7","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\authentication.service.js":"8","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\index.js":"9","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\ReadMap\\index.js":"10","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\CreateRoute\\index.js":"11","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Preguntas\\index.js":"12","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\routing.js":"13","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Usuarios\\index.js":"14","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\AddPreguntas\\index.js":"15"},{"size":514,"mtime":1610089283950,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":1608623903196,"results":"18","hashOfConfig":"17"},{"size":2073,"mtime":1610360696989,"results":"19","hashOfConfig":"17"},{"size":3354,"mtime":1610622623929,"results":"20","hashOfConfig":"17"},{"size":3492,"mtime":1610360694324,"results":"21","hashOfConfig":"17"},{"size":527,"mtime":1608623903196,"results":"22","hashOfConfig":"17"},{"size":1214,"mtime":1610703579321,"results":"23","hashOfConfig":"17"},{"size":1240,"mtime":1610451227977,"results":"24","hashOfConfig":"17"},{"size":4959,"mtime":1610624463109,"results":"25","hashOfConfig":"17"},{"size":1880,"mtime":1610451860861,"results":"26","hashOfConfig":"17"},{"size":4565,"mtime":1610706922517,"results":"27","hashOfConfig":"17"},{"size":4244,"mtime":1610615458274,"results":"28","hashOfConfig":"17"},{"size":840,"mtime":1610706098042,"results":"29","hashOfConfig":"17"},{"size":4642,"mtime":1610623514221,"results":"30","hashOfConfig":"17"},{"size":1759,"mtime":1610705097244,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xulpqm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\index.js",[],["67","68"],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\serviceWorker.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\App.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\index.js",["69","70","71","72","73","74","75"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n//Ruteo\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n//Estructura\r\nimport { Layout, Menu, Row, Button, Image } from \"antd\";\r\n\r\n// Styles\r\nimport { Logo, Wrapper, ImgHeader } from \"./styles\";\r\n\r\n\r\n\r\n//Rutas programadas\r\nimport { routes } from \"./routes\";\r\n\r\nimport { AuthContext } from \"../App\";\r\nimport { SVG } from \"leaflet\";\r\n\r\n//CONSEJO -- Los \"const\" siempre por debajo de los import\r\nconst mapaSVG = '/public/openstreetmap.svg'\r\n\r\n// Layout\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst Routes = () => {\r\n  //Variables de estado\r\n  // eslint-disable-next-line\r\n  const [selectedKey, setSelectedKey] = useState(\"1\");\r\n\r\n  //Reducer del contexto, para hacer logout\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  \r\n  const getKey=(e)=>{\r\n    localStorage.setItem(\"sub-item\", e.keyPath[1]);\r\n    localStorage.setItem(\"item\", e.key);\r\n  }\r\n\r\n  //Con esta estructura solo se ejecuta al empezar\r\n  useEffect(() => {\r\n    if (window.location.pathname) {\r\n      let new_route = routes.find((route) => route.path === window.location.pathname);\r\n      if (new_route && new_route.key) setSelectedKey(new_route.key);\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => dispatch({ type: \"LOGOUT\" });\r\n\r\n  return (\r\n    <Router>\r\n      {/* Así se comenta en el \"html\" */}\r\n      <Layout>\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          collapsedWidth=\"0\"\r\n          onBreakpoint={(broken) => {\r\n            console.log(broken);\r\n          }}\r\n          onCollapse={(collapsed, type) => {\r\n            console.log(collapsed, type);\r\n          }}\r\n        >\r\n          <Logo />\r\n          <Menu style={{ height: \"calc(100vh - 64px)\" }} mode=\"inline\"  theme=\"dark\" defaultOpenKeys={[localStorage.getItem(\"sub-item\")]} defaultSelectedKeys={[localStorage.getItem(\"item\")]}>\r\n              <Menu.Item key=\"rutas\" icon={<mapaSVG/>}>\r\n                <Link to=\"/routes\">\r\n                  Gestion de Rutas\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"preguntas\" icon={<mapaSVG/>}>\r\n                <Link to=\"/preguntas\">\r\n                  Gestion de Preguntas\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"ranking\" icon={<mapaSVG/>}>\r\n                <Link to=\"/ranking\">\r\n                  Gestion de Ranking\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"usuarios\" icon={<mapaSVG/>}>\r\n                <Link to=\"/usuarios\">\r\n                  Gestion de Usuarios\r\n                </Link>\r\n              </Menu.Item>\r\n            <Button onClick={() => logout()}>Cerrar sesión</Button>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Content style={{ margin: \"24px 16px 0\" }}>\r\n            <Wrapper>\r\n              <Switch>\r\n                {routes.map((data, i) => (\r\n                  <Route key={i} path={data.path} exact={data.exact}>\r\n                    {data.body}\r\n                  </Route>\r\n                ))}\r\n              </Switch>\r\n            </Wrapper>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Login\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\styles.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\routes.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\authentication.service.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\ReadMap\\index.js",["76"],"import React, { useState, useEffect} from 'react';\r\n\r\n//Leaflet\r\nimport { MapContainer, TileLayer, Polyline, useMap, Marker } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-extra-markers/dist/js/leaflet.extra-markers.js.map';\r\nimport 'leaflet-extra-markers/dist/js/leaflet.extra-markers.min.js';\r\nimport 'leaflet-extra-markers/dist/js/leaflet.extra-markers.js';\r\nimport 'leaflet-extra-markers/dist/css/leaflet.extra-markers.min.css';\r\n\r\nconst Map = () =>{\r\n    const [ruta, setRuta] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:8080/routes/${window.location.href.substring(window.location.href.lastIndexOf('/') + 1)}`)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result)=>{\r\n                setRuta(result)\r\n            }\r\n        )\r\n    },[])\r\n    return ruta ? (\r\n        <MapContainer center={[43.25, -1.25]} zoom={5} style={{ height: 'calc(105vh - 210px)' }}>\r\n            <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"/>\r\n            {ruta.rutas_data && ruta.rutas_data.map((ll,a)=>{\r\n                if(a===0){\r\n                    return null\r\n                }\r\n                return <Polyline  key={'latlng'+a} weight={4} positions={[[ruta.rutas_data[a-1].lat, ruta.rutas_data[a-1].lng],[ll.lat, ll.lng]]}></Polyline>\r\n            })}\r\n            {ruta.rutas_loc && ruta.rutas_loc.map((ll,a)=>{\r\n                let descMarker = new L.ExtraMarkers.Icon({\r\n                     markerColor: 'blue', prefix: 'fa',\r\n                });\r\n                return <Marker key={'marker'+a} icon={descMarker} position={[ll.lat, ll.lng]}></Marker>\r\n            })}\r\n        </MapContainer>\r\n    ) : <p>Cargando...</p>\r\n}\r\n\r\nexport default Map;","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\CreateRoute\\index.js",["77","78","79","80","81"],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Preguntas\\index.js",["82","83","84"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Input, Select, Form, Radio } from 'antd';\r\n\r\nconst {Option} = Select;\r\n\r\nconst Preguntas = () =>{\r\n    const [ciudades, setCiudades] = useState(null);\r\n    const [aux, setAux] = useState([]);\r\n    const [rutas, setRutas] = useState(null);\r\n    const [preg, setPreg] = useState(null);\r\n    useEffect( ()=>{\r\n        if(!ciudades){\r\n            fetch(`http://localhost:8080/routes/all`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                    result && result.map((ruta)=>{\r\n                        setAux(aux =>[...aux, ruta.ciudad])\r\n                    })\r\n                    setCiudades(Array.from(new Set(aux)))\r\n                }\r\n            )\r\n        }\r\n        \r\n    },[aux])\r\n    \r\n    const RutasCiudad = (e) =>{\r\n        fetch(`http://localhost:8080/routes/ciudad/${e}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                    console.log(result)\r\n                    setRutas(result)\r\n                    console.log(rutas)\r\n                }\r\n            )\r\n    }\r\n    const PreguntasRuta = (e) =>{\r\n        console.log(e)\r\n        fetch(`http://localhost:8080/preguntas/${e}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                   console.log(result)\r\n                   setPreg(result)\r\n                }\r\n            )\r\n    }\r\n    const Pregunta = (p)=>{\r\n        console.log(p)\r\n        return (\r\n            <Form.Item label={p.pregunta}></Form.Item>\r\n        )\r\n    }\r\n\r\n    //hay que hacer que reciba todas las ciudades de las rutas que hayen una array/lista sin que se repitan\r\n    //mas o menos hecho, spring es una puta mierda\r\n    \r\n    //cambiar estructura de preguntas\r\n    return(\r\n        <div>\r\n            {ciudades ? <Select onChange={RutasCiudad}>\r\n                {ciudades && ciudades.map((ciudad,a)=>{\r\n                    return <Option key={'ciudad'+a} value={ciudad}>{ciudad}</Option>\r\n                }\r\n                )}\r\n            </Select>: null}\r\n            <h1>{ciudades}</h1>\r\n            {rutas ? <Select onChange={PreguntasRuta}>\r\n                {rutas && rutas.map((ruta,a)=>{\r\n                    return <Option key={'ruta'+a} value={ruta.id}>{ruta.nombre}</Option>\r\n                }\r\n                )}\r\n            </Select>: null}\r\n            \r\n            {preg ? \r\n                <Form>\r\n                    {preg && preg.map((p,a)=>{\r\n                        console.log(p)\r\n                        return <div key={\"pregunta\"+a}>\r\n                            <Form.Item key={\"preg\"+a} name={\"preg\"+a} label={\"Pregunta nº\"+p.numPregunta} initialValue={p.pregunta}>\r\n                                <Input></Input>\r\n                            </Form.Item>\r\n                            <Form.Item key={\"opcion\"+a+p.respuestas[0].numRespuesta} name={\"opcion\"+a+p.respuestas[0].numRespuesta} label={\"Respuesta \"+p.respuestas[0].numRespuesta} initialValue={p.respuestas[0].respuesta}><Input></Input></Form.Item>\r\n                            <Form.Item key={\"opcion\"+a+p.respuestas[1].numRespuesta} name={\"opcion\"+a+p.respuestas[1].numRespuesta} label={\"Respuesta \"+p.respuestas[1].numRespuesta} initialValue={p.respuestas[1].respuesta}><Input></Input></Form.Item>\r\n                            <Form.Item key={\"opcion\"+a+p.respuestas[2].numRespuesta} name={\"opcion\"+a+p.respuestas[2].numRespuesta} label={\"Respuesta \"+p.respuestas[2].numRespuesta} initialValue={p.respuestas[2].respuesta}><Input></Input></Form.Item>\r\n                            <Form.Item name={\"radio-group\"+a} label=\"Respuesta correcta♥\">\r\n                              <Radio.Group defaultValue={p.opcion}>\r\n                                <Radio value={1}>Respuesta 1</Radio>\r\n                                <Radio value={2}>Respuesta 2</Radio>\r\n                                <Radio value={3}>Respuesta 3</Radio>\r\n                              </Radio.Group>\r\n                            </Form.Item>\r\n                        </div>\r\n                    })}\r\n                </Form>\r\n            : null}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preguntas;","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\routing.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Usuarios\\index.js",["85","86"],"import React, { useState, useEffect } from 'react';\r\n\r\n//Leaflet\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {Table, Button, Input, Space, Breadcrumb, Typography, Row, Col} from 'antd';\r\nimport { EditOutlined, DeleteOutlined, SearchOutlined, PlusOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport Highlighter from 'react-highlight-words';\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Route, Switch,Link } from \"react-router-dom\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst UserTable = () =>{\r\n    const [users, setUsers] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchedColumn, setSearchedColumn] = useState('');\r\n    \r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                icon={<SearchOutlined />}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : '',\r\n        render: text =>\r\n          searchedColumn === dataIndex ? (\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text ? text.toString() : ''}\r\n            />\r\n          ) : (\r\n            text\r\n          ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n       confirm();\r\n       setSearchText(selectedKeys[0])\r\n       setSearchedColumn(dataIndex)\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n       clearFilters();\r\n       setSearchText('');\r\n    };\r\n    const columns = [\r\n        {title:'ID',dataIndex:'id',key:'id'},{title: 'Nombre de usuario',dataIndex:'usuario',key:'usuario', ...getColumnSearchProps('usuario')},{ title: 'Contraseña',  dataIndex:'password',key:'password'},{ title: 'Action', key: 'operation', fixed: 'right', width: 100, render: (_, record) => <b><Button onClick={()=>retrieveRoute(record.id)} icon={<EditOutlined />}/><Button onClick={()=>deleteRoute(record.id)} icon={<DeleteOutlined />}/></b>} \r\n    ]\r\n    const retrieveRoute = id =>{\r\n        window.location.href=`agentconfig/update/${id}`\r\n    }\r\n    const deleteRoute = id =>{\r\n      fetch(`http://localhost:8080/usuarios/${id}`,{\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type':'application/json',\r\n        }\r\n      }).then(res => res.json())\r\n      .catch(error => console.error('Error:', error))\r\n      .then(response => console.log('Success:', response));\r\n      window.location.reload();\r\n    }\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/usuarios/todos_registrados\", {\r\n          headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n        })\r\n          .then(res => res.json()\r\n          .then(\r\n            (result) => {\r\n              setUsers(result)\r\n            }\r\n          ))\r\n    }, []);\r\n    return (\r\n       <div>\r\n        <Row justify={'space-between'}>\r\n          <Col span={12}><Title>Gestión de usuarios <Text type=\"secondary\">Tabla</Text></Title></Col>\r\n          <Col span={12}>\r\n            <Breadcrumb separator=\">\" >\r\n              <Breadcrumb.Item>Gestión de Usuarios</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Tabla de datos</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </Col>\r\n        </Row>\r\n           <Table dataSource={users} columns={columns} rowKey='id'></Table>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default UserTable;","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\AddPreguntas\\index.js",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":24,"nodeType":"94","messageId":"95","endLine":7,"endColumn":27},{"ruleId":"92","severity":1,"message":"96","line":7,"column":37,"nodeType":"94","messageId":"95","endLine":7,"endColumn":42},{"ruleId":"92","severity":1,"message":"97","line":10,"column":25,"nodeType":"94","messageId":"95","endLine":10,"endColumn":34},{"ruleId":"92","severity":1,"message":"98","line":18,"column":10,"nodeType":"94","messageId":"95","endLine":18,"endColumn":13},{"ruleId":"92","severity":1,"message":"99","line":24,"column":9,"nodeType":"94","messageId":"95","endLine":24,"endColumn":15},{"ruleId":"92","severity":1,"message":"100","line":26,"column":9,"nodeType":"94","messageId":"95","endLine":26,"endColumn":16},{"ruleId":"92","severity":1,"message":"101","line":38,"column":9,"nodeType":"94","messageId":"95","endLine":38,"endColumn":15},{"ruleId":"92","severity":1,"message":"102","line":4,"column":45,"nodeType":"94","messageId":"95","endLine":4,"endColumn":51},{"ruleId":"92","severity":1,"message":"103","line":4,"column":35,"nodeType":"94","messageId":"95","endLine":4,"endColumn":40},{"ruleId":"92","severity":1,"message":"104","line":9,"column":13,"nodeType":"94","messageId":"95","endLine":9,"endColumn":19},{"ruleId":"92","severity":1,"message":"105","line":28,"column":20,"nodeType":"94","messageId":"95","endLine":28,"endColumn":31},{"ruleId":"92","severity":1,"message":"106","line":42,"column":11,"nodeType":"94","messageId":"95","endLine":42,"endColumn":14},{"ruleId":"92","severity":1,"message":"106","line":63,"column":11,"nodeType":"94","messageId":"95","endLine":63,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":18,"column":48,"nodeType":"109","messageId":"110","endLine":18,"endColumn":50},{"ruleId":"111","severity":1,"message":"112","line":26,"column":7,"nodeType":"113","endLine":26,"endColumn":12,"suggestions":"114"},{"ruleId":"92","severity":1,"message":"115","line":50,"column":11,"nodeType":"94","messageId":"95","endLine":50,"endColumn":19},{"ruleId":"92","severity":1,"message":"116","line":6,"column":56,"nodeType":"94","messageId":"95","endLine":6,"endColumn":68},{"ruleId":"92","severity":1,"message":"117","line":6,"column":70,"nodeType":"94","messageId":"95","endLine":6,"endColumn":81},{"ruleId":"92","severity":1,"message":"118","line":3,"column":9,"nodeType":"94","messageId":"95","endLine":3,"endColumn":15},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'ImgHeader' is defined but never used.","'SVG' is defined but never used.","'Header' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'getKey' is assigned a value but never used.","'useMap' is defined but never used.","'Popup' is defined but never used.","'marker' is defined but never used.","'setMapState' is assigned a value but never used.","'map' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ciudades'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'Pregunta' is assigned a value but never used.","'PlusOutlined' is defined but never used.","'EyeOutlined' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [aux, ciudades]",{"range":"124","text":"125"},[794,799],"[aux, ciudades]"]