[{"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\index.js":"1","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\serviceWorker.js":"2","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\App.js":"3","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\index.js":"4","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Login\\index.js":"5","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\styles.js":"6","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\routes.js":"7","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\authentication.service.js":"8","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\ReadMap\\index.js":"9","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\index.js":"10","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\AddPreguntas\\index.js":"11","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\CreateRoute\\index.js":"12","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Usuarios\\index.js":"13","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Preguntas\\index.js":"14","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\routing.js":"15","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Ranking\\index.js":"16","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Chat\\index.js":"17","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Chat\\ChatRoom\\index.js":"18","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Chat\\useChat.js":"19"},{"size":1307,"mtime":1611229964307,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1608623903196,"results":"22","hashOfConfig":"21"},{"size":2073,"mtime":1610360696989,"results":"23","hashOfConfig":"21"},{"size":3536,"mtime":1611228674212,"results":"24","hashOfConfig":"21"},{"size":3492,"mtime":1610360694324,"results":"25","hashOfConfig":"21"},{"size":527,"mtime":1608623903196,"results":"26","hashOfConfig":"21"},{"size":1747,"mtime":1611229382413,"results":"27","hashOfConfig":"21"},{"size":1240,"mtime":1611144207741,"results":"28","hashOfConfig":"21"},{"size":5227,"mtime":1611221303089,"results":"29","hashOfConfig":"21"},{"size":5418,"mtime":1611144207736,"results":"30","hashOfConfig":"21"},{"size":2930,"mtime":1611215134078,"results":"31","hashOfConfig":"21"},{"size":5552,"mtime":1611219233956,"results":"32","hashOfConfig":"21"},{"size":4438,"mtime":1611144207738,"results":"33","hashOfConfig":"21"},{"size":6320,"mtime":1611217588929,"results":"34","hashOfConfig":"21"},{"size":840,"mtime":1610706098042,"results":"35","hashOfConfig":"21"},{"size":5626,"mtime":1611217095059,"results":"36","hashOfConfig":"21"},{"size":691,"mtime":1611229937202,"results":"37","hashOfConfig":"21"},{"size":1338,"mtime":1611229514199,"results":"38","hashOfConfig":"21"},{"size":1048,"mtime":1611229111788,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xulpqm",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\serviceWorker.js",[],["83","84"],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\App.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\index.js",["85","86","87","88","89","90","91"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n//Ruteo\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n//Estructura\r\nimport { Layout, Menu, Row, Button, Image } from \"antd\";\r\n\r\n// Styles\r\nimport { Logo, Wrapper, ImgHeader } from \"./styles\";\r\n\r\n\r\n\r\n//Rutas programadas\r\nimport { routes } from \"./routes\";\r\n\r\nimport { AuthContext } from \"../App\";\r\nimport { SVG } from \"leaflet\";\r\n\r\n//CONSEJO -- Los \"const\" siempre por debajo de los import\r\nconst mapaSVG = '/public/openstreetmap.svg'\r\n\r\n// Layout\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst Routes = () => {\r\n  //Variables de estado\r\n  // eslint-disable-next-line\r\n  const [selectedKey, setSelectedKey] = useState(\"1\");\r\n\r\n  //Reducer del contexto, para hacer logout\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  \r\n  const getKey=(e)=>{\r\n    localStorage.setItem(\"sub-item\", e.keyPath[1]);\r\n    localStorage.setItem(\"item\", e.key);\r\n  }\r\n\r\n  //Con esta estructura solo se ejecuta al empezar\r\n  useEffect(() => {\r\n    if (window.location.pathname) {\r\n      let new_route = routes.find((route) => route.path === window.location.pathname);\r\n      if (new_route && new_route.key) setSelectedKey(new_route.key);\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => dispatch({ type: \"LOGOUT\" });\r\n\r\n  return (\r\n    <Router>\r\n      {/* Así se comenta en el \"html\" */}\r\n      <Layout>\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          collapsedWidth=\"0\"\r\n          onBreakpoint={(broken) => {\r\n            console.log(broken);\r\n          }}\r\n          onCollapse={(collapsed, type) => {\r\n            console.log(collapsed, type);\r\n          }}\r\n        >\r\n          <Logo />\r\n          <Menu style={{ height: \"calc(100vh - 64px)\" }} mode=\"inline\"  theme=\"dark\" defaultOpenKeys={[localStorage.getItem(\"sub-item\")]} defaultSelectedKeys={[localStorage.getItem(\"item\")]}>\r\n              <Menu.Item key=\"rutas\" icon={<mapaSVG/>}>\r\n                <Link to=\"/routes\">\r\n                  Gestion de Rutas\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"preguntas\" icon={<mapaSVG/>}>\r\n                <Link to=\"/preguntas\">\r\n                  Gestion de Preguntas\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"ranking\" icon={<mapaSVG/>}>\r\n                <Link to=\"/ranking\">\r\n                  Gestion de Ranking\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"usuarios\" icon={<mapaSVG/>}>\r\n                <Link to=\"/usuarios\">\r\n                  Gestion de Usuarios\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"chat\" icon={<mapaSVG/>}>\r\n                <Link to=\"/chats\">\r\n                  Gestion de Chats\r\n                </Link>\r\n              </Menu.Item>\r\n            <Button onClick={() => logout()}>Cerrar sesión</Button>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Content style={{ margin: \"24px 16px 0\" }}>\r\n            <Wrapper>\r\n              <Switch>\r\n                {routes.map((data, i) => (\r\n                  <Route key={i} path={data.path} exact={data.exact}>\r\n                    {data.body}\r\n                  </Route>\r\n                ))}\r\n              </Switch>\r\n            </Wrapper>\r\n          </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>RouteQuest©2021 Created by your mother</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Login\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\styles.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\router\\routes.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\authentication.service.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\ReadMap\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\AddPreguntas\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Map\\CreateRoute\\index.js",["92","93","94"],"import React, { useState } from 'react';\r\n\r\n//Leaflet\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet'\r\n\r\nimport {routingService} from '../../../services/routing'\r\n\r\n//Import Leaflet and plugins\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {Button, Form, Input, Breadcrumb, Row, Col, Typography} from 'antd';\r\n\r\nconst {Title, Text} = Typography;\r\n\r\n\r\n//estado por defecto\r\nconst INITIAL_STATE = {\r\n    lat: 43.2612,\r\n    lng: -1.779,\r\n    zoom: 8,\r\n    track: [\r\n      [43.34365692013493, -1.7948913574218752],\r\n      [42.815299518379796, -1.642112731933594],\r\n      [41.60312076451184, -0.8569335937500001],\r\n      [40.33817045213394, -1.0958862304687502],\r\n      [40.09557563847372, -1.2575000524520874]\r\n    ]\r\n}\r\n\r\nconst RouteCreator = () => {\r\n  const [mapState, setMapState] = useState(INITIAL_STATE); //Estado por defecto\r\n  const [rutaClick, setRutaClick] = useState(null);\r\n  const [track, setTrack] = useState([]);\r\n  const [markers, setMarkers] = useState([])\r\n  const [markerMode, setMarkerMode] = useState(false);\r\n  const [distancia, setDistancia] = useState(0);\r\n  const [tiempo, setTiempo] = useState(0);\r\n\r\n  //aux\r\n  const [clickAux, setClickAux] = useState(null)\r\n\r\n  let descMarker = new L.ExtraMarkers.Icon({\r\n    markerColor: 'blue', prefix: 'fa',\r\n  });\r\n  \r\n  //Creador de ruta\r\n  const CrearRuta = () =>{\r\n    const map = useMapEvents({\r\n      click: (e) => {\r\n        if(rutaClick===null){\r\n          setRutaClick({lat: e.latlng.lat, lng: e.latlng.lng})\r\n        }else{\r\n          routingService.getRoute(rutaClick.lat, rutaClick.lng, e.latlng.lat, e.latlng.lng)\r\n          .then(response => {\r\n            if (response) \r\n            console.log(response)\r\n            setTrack(track => [...track,...response.latLon])\r\n            setClickAux({lat: rutaClick.lat, lng: rutaClick.lng})\r\n            setRutaClick({lat: e.latlng.lat, lng: e.latlng.lng})\r\n            setDistancia(distancia+response.distance)\r\n            setTiempo(tiempo+response.time)\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return null;\r\n  }\r\n\r\n  //Funcion para añadir los puntos de las preguntas\r\n  const CrearPuntos = () =>{\r\n    const map = useMapEvents({\r\n      click:(e)=>{//hay que poner limite de 10 puntos\r\n        setMarkers([...markers, e.latlng])\r\n      }\r\n    })\r\n    return null\r\n  }\r\n  //Funcion para deshacer\r\n  const deshacerRuta = () => {\r\n    console.log(clickAux)\r\n    setTrack(track.filter(item => console.log(item)))\r\n    //setJoinList(joinList.filter((e)=>(e !== name)))\r\n    //un intento de deshacer, de momento no hace nada\r\n    //el problema es que, al guardarse en el array se reducen los decimales\r\n    //students.findIndex(std=> std.id === 200);\r\n    console.log(track)\r\n\r\n  }\r\n\r\n  const ChangeMode = ()=>{\r\n    if(!markerMode){\r\n      setMarkerMode(true)\r\n    }else{\r\n      setMarkerMode(false)\r\n    }\r\n  }\r\n  const GuardarRuta = values =>{\r\n    fetch(`http://localhost:8080/routes/save`,{\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:\r\n        JSON.stringify({\r\n          nombre: values.nombre,\r\n          ciudad: values.ciudad,\r\n          distancia: distancia,\r\n          tiempo: tiempo,\r\n          rutas_data: track,\r\n          rutas_loc: markers,\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => console.log('Success:', response));\r\n    window.location.href='/routes_create/add_pregunta'\r\n  }\r\n \r\n  \r\n  return (\r\n    <div>\r\n      <Row justify={'space-between'}>\r\n          <Col span={12}><Title>Gestión de rutas <Text type=\"secondary\">Creación</Text></Title></Col>\r\n          <Col span={12}>\r\n            <Breadcrumb separator=\">\" >\r\n              <Breadcrumb.Item>Gestión de Rutas</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Creación de ruta</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </Col>\r\n        </Row>\r\n        <Form onFinish={GuardarRuta}>\r\n          <Form.Item label=\"Nombre\" name=\"nombre\" rules={[{ required: true, message: 'El nombre es obligatorio!!' }]}>\r\n              <Input/>\r\n          </Form.Item>\r\n          <Form.Item label=\"Ciudad\" name=\"ciudad\" rules={[{ required: true, message: 'La ciudad es obligatoria!!' }]}>\r\n              <Input/>\r\n          </Form.Item>\r\n          <Button htmlType=\"submit\">Guardar Ruta</Button>\r\n        </Form>\r\n        <Button onClick={ChangeMode}>Cambiar Modo</Button>\r\n        <Button onClick={deshacerRuta}>Deshacer</Button>\r\n        <h1>{(Math.round((distancia/1000)*100))/100} km</h1>\r\n        <h1>{Math.round((tiempo/1000)/60)} min.</h1>\r\n        <MapContainer \r\n          center={[mapState.lat, mapState.lng]} \r\n          zoom={mapState.zoom} \r\n          style={{ height: 'calc(100vh - 210px)' }}\r\n        >\r\n          {markerMode ? <CrearPuntos/> : <CrearRuta/>}\r\n          {markers.length>0 ? \r\n            <div>\r\n              {markers && markers.map((mark, a)=>{\r\n                return <Marker key={\"marker\"+a} icon={descMarker} position={[mark.lat, mark.lng]}></Marker>\r\n            })}\r\n            </div>\r\n            : null}\r\n            <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"/>\r\n        {track ? <Polyline positions={track}></Polyline>: null}\r\n        </MapContainer>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RouteCreator;","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Usuarios\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Preguntas\\index.js",["95"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Input, Select, Form, Breadcrumb, Typography, Radio, Row, Col, Button } from 'antd';\r\n\r\nconst {Option} = Select;\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst Preguntas = () =>{\r\n    const [ciudades, setCiudades] = useState(null);\r\n    const [aux, setAux] = useState([]);\r\n    const [rutas, setRutas] = useState(null);\r\n    const [preg, setPreg] = useState(null);\r\n    useEffect( ()=>{\r\n        if(!ciudades){\r\n            fetch(`http://localhost:8080/routes/all`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                    // eslint-disable-next-line\r\n                    result && result.map((ruta)=>{\r\n                        setAux(aux =>[...aux, ruta.ciudad])\r\n                    })\r\n                    setCiudades(Array.from(new Set(aux)))\r\n                }\r\n            )\r\n        }\r\n    // eslint-disable-next-line\r\n    },[aux])\r\n    \r\n    const RutasCiudad = (e) =>{\r\n        fetch(`http://localhost:8080/routes/ciudad/${e}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                    console.log(result)\r\n                    setRutas(result)\r\n                    console.log(rutas)\r\n                }\r\n            )\r\n    }\r\n    const PreguntasRuta = (e) =>{\r\n        setPreg(null)\r\n        console.log(e)\r\n        fetch(`http://localhost:8080/preguntas/${e}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                   console.log(result)\r\n                   setPreg(result)\r\n                }\r\n            )\r\n    }\r\n\r\n    const ActPreguntas = (data) =>{\r\n        console.log(data)\r\n        preg && preg.map((p,index)=>{\r\n            fetch(`http://localhost:8080/preguntas/${p._id}`,{\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    'pregunta': data[`preg`+index],\r\n                    'opcion' : data[`radio-group`+index],\r\n                    'respuestas':[\r\n                        {\r\n                            'numRespuesta': 1,\r\n                            'respuesta': data[`opcion${index}1`]\r\n                        },{\r\n                            'numRespuesta': 2,\r\n                            'respuesta': data[`opcion${index}2`]}\r\n                        ,{\r\n                            'numRespuesta': 3,\r\n                            'respuesta': data[`opcion${index}3`]\r\n                        }\r\n                    ]\r\n                })\r\n            }).then(res => res.json())\r\n            .catch(error => console.error('Error:', error))\r\n            .then(response => console.log('Success:', response));\r\n            window.location.reload();\r\n\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            <Row justify={'space-between'}>\r\n              <Col span={12}><Title>Gestión de Preguntas <Text type=\"secondary\">Formulario</Text></Title></Col>\r\n              <Col span={12}>\r\n                <Breadcrumb separator=\">\" >\r\n                  <Breadcrumb.Item>Gestión de Preguntas</Breadcrumb.Item>\r\n                  <Breadcrumb.Item>Modificaciones y lectura</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Col>\r\n            </Row>\r\n            <Row justify=\"space-between\">\r\n                <Col span={12}>\r\n                    {ciudades ? <Select showSearch placeholder=\"Seleccione una ciudad\" onChange={RutasCiudad}>\r\n                        {ciudades && ciudades.map((ciudad,a)=>{\r\n                            return <Option key={'ciudad'+a} value={ciudad}>{ciudad}</Option>\r\n                        }\r\n                        )}\r\n                    </Select>: <p>Cargando...</p>}\r\n                </Col>\r\n                <Col span={12}>\r\n                    {rutas ? <Select showSearch placeholder=\"Seleccione una ruta\" onChange={PreguntasRuta}>\r\n                        {rutas && rutas.map((ruta,a)=>{\r\n                            return <Option key={'ruta'+a} value={ruta.id}>{ruta.nombre}</Option>\r\n                        }\r\n                        )}\r\n                    </Select>: null}\r\n                </Col>\r\n            </Row>\r\n            {preg ? \r\n                <Form onFinish={ActPreguntas}>\r\n                    {preg && preg.map((p,a)=>{\r\n                        console.log(p)\r\n                        return <div key={\"pregunta\"+a}>\r\n                            <Form.Item key={\"preg\"+a} name={\"preg\"+a} label={\"Pregunta nº\"+p.numPregunta} required initialValue={p.pregunta}>\r\n                                <Input></Input>\r\n                            </Form.Item>\r\n                            <Form.Item required key={\"opcion\"+a+p.respuestas[0].numRespuesta} name={\"opcion\"+a+p.respuestas[0].numRespuesta} label={\"Respuesta \"+p.respuestas[0].numRespuesta} initialValue={p.respuestas[0].respuesta}><Input></Input></Form.Item>\r\n                            <Form.Item required key={\"opcion\"+a+p.respuestas[1].numRespuesta} name={\"opcion\"+a+p.respuestas[1].numRespuesta} label={\"Respuesta \"+p.respuestas[1].numRespuesta} initialValue={p.respuestas[1].respuesta}><Input></Input></Form.Item>\r\n                            <Form.Item required key={\"opcion\"+a+p.respuestas[2].numRespuesta} name={\"opcion\"+a+p.respuestas[2].numRespuesta} label={\"Respuesta \"+p.respuestas[2].numRespuesta} initialValue={p.respuestas[2].respuesta}><Input></Input></Form.Item>\r\n                            <Form.Item name={\"radio-group\"+a} label=\"Respuesta correcta\" required initialValue={p.opcion}>\r\n                                {/*al mandar los datos pone undefined aunque esté marcado desde el inicio*/}\r\n                                <Radio.Group>\r\n                                    <Radio value={1}>Respuesta 1</Radio>\r\n                                    <Radio value={2}>Respuesta 2</Radio>\r\n                                    <Radio value={3}>Respuesta 3</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                        </div>\r\n                    })}\r\n                    <Button htmlType=\"submit\">Actualizar preguntas</Button>\r\n                </Form>\r\n            : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preguntas;","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\services\\routing.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Ranking\\index.js",["96","97"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Input, Select, Form, Radio, Table, Button, Space, Row, Col, Breadcrumb, Typography } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nconst {Title, Text} = Typography;\r\n\r\n\r\nconst {Option} = Select;\r\n\r\nconst Ranking = () =>{\r\n    const [ciudades, setCiudades] = useState(null);\r\n    const [aux, setAux] = useState([]);\r\n    const [rutas, setRutas] = useState(null);\r\n    const [rank, setRank] = useState(null);\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchedColumn, setSearchedColumn] = useState('');\r\n    \r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                icon={<SearchOutlined />}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : '',\r\n        render: text =>\r\n          searchedColumn === dataIndex ? (\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text ? text.toString() : ''}\r\n            />\r\n          ) : (\r\n            text\r\n          ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n       confirm();\r\n       setSearchText(selectedKeys[0])\r\n       setSearchedColumn(dataIndex)\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n       clearFilters();\r\n       setSearchText('');\r\n    };\r\n    const columns = [\r\n        {title:'ID',dataIndex:'_id',key:'_id'},{title: 'Usuario',dataIndex:'nombre',key:'nombre', ...getColumnSearchProps('name')},{ title: 'Puntos',  dataIndex:'puntos',key:'puntos'},{title:'Aciertos', dataIndex: 'aciertos', key:'aciertos'},{title:'Fallos', dataIndex: 'fallos', key:'fallos'},{title:'Tiempo', dataIndex: 'tiempo', key:'tiempo'},{ title: 'Action', key: 'operation', fixed: 'right', width: 100, render: (_, record) => <b>o</b>} \r\n    ]\r\n    useEffect( ()=>{\r\n        if(!ciudades){\r\n            fetch(`http://localhost:8080/routes/all`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result)=>{\r\n                    // eslint-disable-next-line\r\n                    result && result.map((ruta)=>{\r\n                        setAux(aux =>[...aux, ruta.ciudad])\r\n                    })\r\n                    setCiudades(Array.from(new Set(aux)))\r\n                }\r\n            )\r\n        }\r\n    // eslint-disable-next-line\r\n    },[aux])\r\n\r\n    const RutasCiudad = (e) =>{\r\n      fetch(`http://localhost:8080/routes/ciudad/${e}`)\r\n          .then(res => res.json())\r\n          .then(\r\n              (result)=>{\r\n                  console.log(result)\r\n                  setRutas(result)\r\n                  console.log(rutas)\r\n              }\r\n          )\r\n    }\r\n\r\n    const RankingRuta = (e) =>{\r\n      fetch(`http://localhost:8080/ranking/${e}`)\r\n          .then(res => res.json())\r\n          .then(\r\n              (result)=>{\r\n                 console.log(result)\r\n                 setRank(result)\r\n              }\r\n          )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row justify={'space-between'}>\r\n          <Col span={12}><Title>Gestión de Rankings <Text type=\"secondary\">Tabla</Text></Title></Col>\r\n          <Col span={12}>\r\n            <Breadcrumb separator=\">\" >\r\n              <Breadcrumb.Item>Gestión de Rankings</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Tabla de datos</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"space-between\">\r\n          <Col span={12}>\r\n            {ciudades ? <Select showSearch placeholder=\"Seleccione una ciudad\" onChange={RutasCiudad}>\r\n                {ciudades && ciudades.map((ciudad,a)=>{\r\n                    return <Option key={'ciudad'+a} value={ciudad}>{ciudad}</Option>\r\n                }\r\n                )}\r\n            </Select>: null}\r\n          </Col>\r\n          <Col span={12}>\r\n            {rutas ? <Select showSearch placeholder=\"Seleccione una ruta\" onChange={RankingRuta}>\r\n                {rutas && rutas.map((ruta,a)=>{\r\n                    return <Option key={'ruta'+a} value={ruta.id}>{ruta.nombre}</Option>\r\n                }\r\n                )}\r\n            </Select>: null}\r\n          </Col>\r\n        </Row>\r\n        {rank ? <Table dataSource={rank} columns={columns} rowKey='_id'></Table>: null}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Ranking;","C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Chat\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Chat\\ChatRoom\\index.js",[],"C:\\Users\\2dam3\\Desktop\\React\\RetoReact\\src\\pages\\Chat\\useChat.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":24,"nodeType":"104","messageId":"105","endLine":7,"endColumn":27},{"ruleId":"102","severity":1,"message":"106","line":7,"column":37,"nodeType":"104","messageId":"105","endLine":7,"endColumn":42},{"ruleId":"102","severity":1,"message":"107","line":10,"column":25,"nodeType":"104","messageId":"105","endLine":10,"endColumn":34},{"ruleId":"102","severity":1,"message":"108","line":18,"column":10,"nodeType":"104","messageId":"105","endLine":18,"endColumn":13},{"ruleId":"102","severity":1,"message":"109","line":24,"column":9,"nodeType":"104","messageId":"105","endLine":24,"endColumn":15},{"ruleId":"102","severity":1,"message":"110","line":26,"column":9,"nodeType":"104","messageId":"105","endLine":26,"endColumn":16},{"ruleId":"102","severity":1,"message":"111","line":38,"column":9,"nodeType":"104","messageId":"105","endLine":38,"endColumn":15},{"ruleId":"102","severity":1,"message":"112","line":31,"column":20,"nodeType":"104","messageId":"105","endLine":31,"endColumn":31},{"ruleId":"102","severity":1,"message":"113","line":48,"column":11,"nodeType":"104","messageId":"105","endLine":48,"endColumn":14},{"ruleId":"102","severity":1,"message":"113","line":71,"column":11,"nodeType":"104","messageId":"105","endLine":71,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":57,"column":35,"nodeType":"116","messageId":"117","endLine":57,"endColumn":37},{"ruleId":"102","severity":1,"message":"118","line":3,"column":25,"nodeType":"104","messageId":"105","endLine":3,"endColumn":29},{"ruleId":"102","severity":1,"message":"119","line":3,"column":31,"nodeType":"104","messageId":"105","endLine":3,"endColumn":36},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'ImgHeader' is defined but never used.","'SVG' is defined but never used.","'Header' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'getKey' is assigned a value but never used.","'setMapState' is assigned a value but never used.","'map' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Form' is defined but never used.","'Radio' is defined but never used.","no-global-assign","no-unsafe-negation"]