[{"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\index.js":"1","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\serviceWorker.js":"2","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\App.js":"3","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\router\\index.js":"4","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\pages\\Login\\index.js":"5","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\router\\styles.js":"6","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\router\\routes.js":"7","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\services\\authentication.service.js":"8","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\pages\\Map\\index.js":"9","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\pages\\Map\\ReadMap\\index.js":"10"},{"size":514,"mtime":1609175398173,"results":"11","hashOfConfig":"12"},{"size":5086,"mtime":1609152085501,"results":"13","hashOfConfig":"12"},{"size":2099,"mtime":1610220706661,"results":"14","hashOfConfig":"12"},{"size":2780,"mtime":1609175743541,"results":"15","hashOfConfig":"12"},{"size":3498,"mtime":1610220520027,"results":"16","hashOfConfig":"12"},{"size":527,"mtime":1609152085501,"results":"17","hashOfConfig":"12"},{"size":425,"mtime":1609610221057,"results":"18","hashOfConfig":"12"},{"size":1238,"mtime":1610220604291,"results":"19","hashOfConfig":"12"},{"size":5147,"mtime":1609609875306,"results":"20","hashOfConfig":"12"},{"size":1922,"mtime":1609612254849,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ptvtgt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\index.js",[],["46","47"],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\serviceWorker.js",[],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\App.js",[],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\router\\index.js",["48","49","50","51","52","53","54"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n//Ruteo\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n//Estructura\r\nimport { Layout, Menu, Row, Button, Image } from \"antd\";\r\n\r\n// Styles\r\nimport { Logo, Wrapper, ImgHeader } from \"./styles\";\r\n\r\n\r\n\r\n//Rutas programadas\r\nimport { routes } from \"./routes\";\r\n\r\nimport { AuthContext } from \"../App\";\r\nimport { SVG } from \"leaflet\";\r\n\r\n//CONSEJO -- Los \"const\" siempre por debajo de los import\r\nconst mapaSVG = '/public/openstreetmap.svg'\r\n\r\n// Layout\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst Routes = () => {\r\n  //Variables de estado\r\n  // eslint-disable-next-line\r\n  const [selectedKey, setSelectedKey] = useState(\"1\");\r\n\r\n  //Reducer del contexto, para hacer logout\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  \r\n  const getKey=(e)=>{\r\n    localStorage.setItem(\"sub-item\", e.keyPath[1]);\r\n    localStorage.setItem(\"item\", e.key);\r\n  }\r\n\r\n  //Con esta estructura solo se ejecuta al empezar\r\n  useEffect(() => {\r\n    if (window.location.pathname) {\r\n      let new_route = routes.find((route) => route.path === window.location.pathname);\r\n      if (new_route && new_route.key) setSelectedKey(new_route.key);\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => dispatch({ type: \"LOGOUT\" });\r\n\r\n  return (\r\n    <Router>\r\n      {/* Así se comenta en el \"html\" */}\r\n      <Layout>\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          collapsedWidth=\"0\"\r\n          onBreakpoint={(broken) => {\r\n            console.log(broken);\r\n          }}\r\n          onCollapse={(collapsed, type) => {\r\n            console.log(collapsed, type);\r\n          }}\r\n        >\r\n          <Logo />\r\n          <Menu style={{ height: \"calc(100vh - 64px)\" }} mode=\"inline\"  theme=\"dark\" defaultOpenKeys={[localStorage.getItem(\"sub-item\")]} defaultSelectedKeys={[localStorage.getItem(\"item\")]}>\r\n              <Menu.Item key=\"ksr1\" icon={<mapaSVG/>}>\r\n                <Link to=\"/routes\">\r\n                  Gestion de Rutas\r\n                </Link>\r\n              </Menu.Item>\r\n            <Button onClick={() => logout()}>Cerrar sesión</Button>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Content style={{ margin: \"24px 16px 0\" }}>\r\n            <Wrapper>\r\n              <Switch>\r\n                {routes.map((data, i) => (\r\n                  <Route key={i} path={data.path} exact={data.exact}>\r\n                    {data.body}\r\n                  </Route>\r\n                ))}\r\n              </Switch>\r\n            </Wrapper>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\pages\\Login\\index.js",[],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\router\\styles.js",[],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\router\\routes.js",[],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\services\\authentication.service.js",["55"],"C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\pages\\Map\\index.js",["56"],"import React, { useState, useEffect, } from 'react';\r\n\r\n//Leaflet\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {Table, Button, Input, Space, Breadcrumb, Typography, Row, Col} from 'antd';\r\nimport { EditOutlined, DeleteOutlined, SearchOutlined, PlusOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport Highlighter from 'react-highlight-words';\r\n// eslint-disable-next-line\r\nimport { BrowserRouter as Router, Route, Switch,Link } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst RouteTable = () =>{\r\n    const [routes, setRoute] = useState(null);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchedColumn, setSearchedColumn] = useState('');\r\n    \r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              \r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                icon={<SearchOutlined />}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : '',\r\n        render: text =>\r\n          searchedColumn === dataIndex ? (\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text ? text.toString() : ''}\r\n            />\r\n          ) : (\r\n            text\r\n          ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n       confirm();\r\n       setSearchText(selectedKeys[0])\r\n       setSearchedColumn(dataIndex)\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n       clearFilters();\r\n       setSearchText('');\r\n    };\r\n    const columns = [\r\n        {title:'ID',dataIndex:'id',key:'id'},{title: 'Nombre Ruta',dataIndex:'nombre',key:'nombre', ...getColumnSearchProps('name')},{ title: 'Distancia',  dataIndex:'distancia',key:'distancia'},{title:'Tiempo est.', dataIndex: 'tiempo', key:'tiempo'},{ title: 'Action', key: 'operation', fixed: 'right', width: 100, render: (_, record) => <b><Button onClick={()=>readRoute(record.id)} icon={<EyeOutlined />}></Button><Button onClick={()=>retrieveRoute(record.id)} icon={<EditOutlined />}/><Button onClick={()=>deleteRoute(record.id)} icon={<DeleteOutlined />}/></b>} \r\n    ]\r\n    const readRoute = id => {\r\n      window.location.href=`routes/${id}`\r\n    }\r\n    const retrieveRoute = id =>{\r\n        window.location.href=`agentconfig/update/${id}`\r\n    }\r\n    const deleteRoute = id =>{\r\n      console.log(id)\r\n      fetch(process.env.REACT_APP_DB + `testagents/`,{\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type':'application/json',\r\n        },body:\r\n          JSON.stringify({\r\n            'id': parseInt(id),\r\n          })\r\n      }).then(res => res.json())\r\n      .catch(error => console.error('Error:', error))\r\n      .then(response => console.log('Success:', response));\r\n      window.location.reload();\r\n    }\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/routes/all\", {\r\n          headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n        })\r\n          .then(res => res.json()\r\n          .then(\r\n            (result) => {\r\n              console.log(result)\r\n              setRoute(result)\r\n            }\r\n          ))\r\n    }, []);\r\n    return (\r\n       <div>\r\n        <Row justify={'space-between'}>\r\n          <Col span={12}><Title>Gestión de rutas <Text type=\"secondary\">Tabla</Text></Title></Col>\r\n          <Col span={12}>\r\n            <Breadcrumb separator=\">\" >\r\n              <Breadcrumb.Item>Gestión de Rutas</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Tabla de datos</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Button icon={<PlusOutlined />}><Link to=\"/routes/create\">Añadir nueva ruta</Link></Button>\r\n        </Row>\r\n           <Table dataSource={routes} columns={columns} rowKey='id'></Table>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default RouteTable;","C:\\Users\\Javi\\Desktop\\react\\RetoReact\\src\\pages\\Map\\ReadMap\\index.js",["57","58"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\n//Leaflet\r\nimport { MapContainer, TileLayer, Polyline, useMap, Marker } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-extra-markers/dist/js/leaflet.extra-markers.js.map';\r\nimport 'leaflet-extra-markers/dist/js/leaflet.extra-markers.min.js';\r\nimport 'leaflet-extra-markers/dist/js/leaflet.extra-markers.js';\r\nimport 'leaflet-extra-markers/dist/css/leaflet.extra-markers.min.css';\r\n\r\nconst Map = () =>{\r\n    const [ruta, setRuta] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:8080/routes/${window.location.href.substring(window.location.href.lastIndexOf('/') + 1)}`)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result)=>{\r\n                setRuta(result)\r\n            }\r\n        )\r\n    },[])\r\n    return ruta ? (\r\n        <MapContainer center={[43.25, -1.25]} zoom={5} style={{ height: 'calc(105vh - 210px)' }}>\r\n            <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"/>\r\n            {ruta.rutas_data && ruta.rutas_data.map((ll,a)=>{\r\n                console.log(ll)\r\n                if(a===0){\r\n                    return null\r\n                }\r\n                return <Polyline  key={'latlng'+a} weight={4} positions={[[ruta.rutas_data[a-1].lat, ruta.rutas_data[a-1].lng],[ll.lat, ll.lng]]}></Polyline>\r\n            })}\r\n            {ruta.rutas_loc && ruta.rutas_loc.map((ll,a)=>{\r\n                let descMarker = new L.ExtraMarkers.Icon({\r\n                     markerColor: 'blue', prefix: 'fa',\r\n                });\r\n                return <Marker key={'marker'+a} icon={descMarker} position={[ll.lat, ll.lng]}></Marker>\r\n            })}\r\n        </MapContainer>\r\n    ) : <p>Cargando...</p>\r\n}\r\n\r\nexport default Map;",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":24,"nodeType":"65","messageId":"66","endLine":7,"endColumn":27},{"ruleId":"63","severity":1,"message":"67","line":7,"column":37,"nodeType":"65","messageId":"66","endLine":7,"endColumn":42},{"ruleId":"63","severity":1,"message":"68","line":10,"column":25,"nodeType":"65","messageId":"66","endLine":10,"endColumn":34},{"ruleId":"63","severity":1,"message":"69","line":18,"column":10,"nodeType":"65","messageId":"66","endLine":18,"endColumn":13},{"ruleId":"63","severity":1,"message":"70","line":24,"column":9,"nodeType":"65","messageId":"66","endLine":24,"endColumn":15},{"ruleId":"63","severity":1,"message":"71","line":26,"column":9,"nodeType":"65","messageId":"66","endLine":26,"endColumn":16},{"ruleId":"63","severity":1,"message":"72","line":38,"column":9,"nodeType":"65","messageId":"66","endLine":38,"endColumn":15},{"ruleId":"63","severity":1,"message":"73","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"63","severity":1,"message":"74","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":13},{"ruleId":"63","severity":1,"message":"75","line":1,"column":38,"nodeType":"65","messageId":"66","endLine":1,"endColumn":44},{"ruleId":"63","severity":1,"message":"76","line":4,"column":45,"nodeType":"65","messageId":"66","endLine":4,"endColumn":51},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'ImgHeader' is defined but never used.","'SVG' is defined but never used.","'Header' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'getKey' is assigned a value but never used.","'axios' is defined but never used.","'Axios' is defined but never used.","'useRef' is defined but never used.","'useMap' is defined but never used.","no-global-assign","no-unsafe-negation"]